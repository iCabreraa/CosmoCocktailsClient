"use client";

import { useMemo } from "react";
import { useFavorites } from "@/hooks/queries/useFavorites";
import { HiOutlineHeart, HiHeart } from "react-icons/hi2";

interface FavoriteButtonProps {
  cocktailId: string;
  className?: string;
}

export default function FavoriteButton({
  cocktailId,
  className = "",
}: FavoriteButtonProps) {
  const { favoritesQuery, addFavorite, removeFavorite } = useFavorites();
  const isFavorite = useMemo(
    () => ((favoritesQuery.data as any[]) ?? []).some(f => f.id === cocktailId),
    [favoritesQuery.data, cocktailId]
  );

  const loading =
    addFavorite.isPending ||
    removeFavorite.isPending ||
    favoritesQuery.isLoading;

  const handleToggle = async () => {
    if (loading) return;
    if (isFavorite) removeFavorite.mutate(cocktailId);
    else addFavorite.mutate(cocktailId);
  };

  return (
    <button
      onClick={handleToggle}
      disabled={loading}
      className={`p-2 rounded-full transition-all duration-200 ${
        isFavorite
          ? "bg-red-500 text-white hover:bg-red-600"
          : "bg-gray-800/50 text-gray-400 hover:bg-gray-700/50 hover:text-red-400"
      } ${loading ? "opacity-50 cursor-not-allowed" : ""} ${className}`}
      title={isFavorite ? "Quitar de favoritos" : "AÃ±adir a favoritos"}
    >
      {loading ? (
        <div className="animate-spin h-4 w-4 border-2 border-current border-t-transparent rounded-full" />
      ) : isFavorite ? (
        <HiHeart className="h-4 w-4" />
      ) : (
        <HiOutlineHeart className="h-4 w-4" />
      )}
    </button>
  );
}
